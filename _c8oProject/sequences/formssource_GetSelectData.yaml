comment: |
  '{
  	"en": {
  		"displayName": "GetSheetData",
  		"comment": "Returns data from a gogle sheet as a source for this list"
  	},
  	"fr": {
  		"displayName": "GetSheetData",
  		"comment": "Renvoie une liste de valeurs à partir d''un google Sheet"
  	},
  	"types":["select"]
  }
  
  '
↓Input_variables [steps.InputVariablesStep-1657276491846]: 
↓jElement [steps.ElementStep-1657277189592]: 
  expression: '''SELECT '' + forms_colons +  '' WHERE '' + forms_colons.split('','')[0] + '' LIKE \''%'' + forms_filter + ''%\'' LIMIT 1000'''
  nodeName: Query
↓Call_Sequence [steps.SequenceStep-1657276491852]: 
  sourceSequence: lib_GoogleSheet.SheetQueryTable
  ↓SheetID [variables.StepVariable-1657276491855]: 
    comment: The Sheet id as found in the google  sheet URL
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1657276491846
          - java.lang.String: 
            - ↑value: ./forms_SheetID/text()
  ↓Range [variables.StepVariable-1657276491858]: 
    comment: The Cell range to read. (examples, A1:D7 or  Sheet!A2:E). leave empty to return all the sheet data
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1657276491846
          - java.lang.String: 
            - ↑value: ./forms_Range/text()
  ↓Query [variables.StepVariable-1657276491861]: 
    comment: The Cell range to read. (examples, A1:D7 or  Sheet!A2:E). leave empty to return all the sheet data
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1657277189592
          - java.lang.String: 
            - ↑value: ./text()
  ↓FirstRowHeader [variables.StepVariable-1657276491864]: 
    comment: Set this to true if the first row a header
    value: true
  ↓formssourceMode [variables.StepVariable-1657276491867]: 
    value: true
↓Array [steps.JsonArrayStep-1657292926301]: 
  key: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: PLAIN
        - →→: value
  ↓Iterator [steps.IteratorStep-1657292872861]: 
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1657276491852
          - java.lang.String: 
            - ↑value: ./document/Array/Object
    ↓IfExist [steps.IfExistThenElseStep-1663678961356]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1657292872861
            - java.lang.String: 
              - ↑value: ./cell[2]
      ↓jThen [steps.ThenStep-1663678961358]: 
        ↓Object [steps.JsonObjectStep-1663584031811]: 
          ↓Field [steps.JsonFieldStep-1657292957530]: 
            key: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                - SmartType: 
                  - ↑mode: PLAIN
                  - →→: displayValue
            value: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                - SmartType: 
                  - ↑mode: SOURCE
                  - com.twinsoft.convertigo.beans.common.XMLVector: 
                    - java.lang.String: 
                      - ↑value: 1657292872861
                    - java.lang.String: 
                      - ↑value: ./cell[1]
          ↓Field1 [steps.JsonFieldStep-1663584058341]: 
            key: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                - SmartType: 
                  - ↑mode: PLAIN
                  - →→: value
            value: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                - SmartType: 
                  - ↑mode: SOURCE
                  - com.twinsoft.convertigo.beans.common.XMLVector: 
                    - java.lang.String: 
                      - ↑value: 1657292872861
                    - java.lang.String: 
                      - ↑value: ./cell[2]
      ↓jElse [steps.ElseStep-1663678961360]: 
        ↓Field [steps.JsonFieldStep-1663679023603]: 
          key: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
              - SmartType: 
                - ↑mode: PLAIN
                - →→: displayValue
          value: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
              - SmartType: 
                - ↑mode: SOURCE
                - com.twinsoft.convertigo.beans.common.XMLVector: 
                  - java.lang.String: 
                    - ↑value: 1657292872861
                  - java.lang.String: 
                    - ↑value: ./cell[1]
↓forms_SheetID [variables.RequestableVariable-1657276491873]: 
  comment: |
    '{
    	"en": {
    		"displayName": "SheetID",
    		"comment":"Configure here the Sheet ID you want to use as datasource."
    	},
    	"fr": {
    		"displayName":"SheetID",
    		"comment":"Configurez ici le document Google Sheet que vous voulez utiliser comme source de données."
    	}
    }
    '
  description: configure=lib_GoogleSheet/DisplayObjects/mobile/configure
↓forms_Range [variables.RequestableVariable-1657276491876]: 
  comment: |
    '{
    	"en": {
    		"displayName": "Range",
    		"comment":"Configure here the data range you want to query from the Google Sheet.  This has to be such as ''Sheet1!A1:Z100'' (Read data from Sheet1, starting from colon A1 to colon Z on 100 lines). Sheet is optional. If omitted, the data will be read from the first available sheet in the document"
    	},
    	"fr": {
    		"displayName":"Plage",
    		"comment":"Configurez ici la plage de cellules que vous voulez requetter sous la fome ''Sheet1!A1:Z100''  (Lire de la feuille Sheet1 à partir de la celllule A1 jusqu''a la cellule Z100). Le nom ''Sheet1'' est optionnel. Si omis, les données seront lues à partir de la première feuille disponible dans le document."
    	}
    }
    '
↓forms_colons [variables.RequestableVariable-1657277007569]: 
  comment: |
    '{
    	"en": {
    		"displayName": "colons",
    		"comment":"Name of the google sheet column separated by a comma to use to retrieve select data. For example A, B or AM. If one column is specified, data the select list will be filled by values coming from this column. If 2 columns are specified, the first one will hold the select list display values and the 2nd one the list values." 
    	},
    	"fr": {
    		"displayName":"colonne",
    		"comment":"Nom des la colonnes Google Sheet utilisée pour les donées séparées par une virgule. Par exemple A,B ou AM ou D,E . Si une seule colonne est spécifiée, la liste sera alimentée par cette colonne. Si 2 colonnes sont spécifiées la premiere donnera les libellés de la liste, la deuxème la valeur pour chaque libellé."
    	}
    }
    '
↓forms_filter [variables.RequestableVariable-1657276759254]: 
  comment: |
    '{
    	"en": {
    		"displayName": "filter",
    		"comment":"Used to filter data from the Goole Sheet"
    	},
    	"fr": {
    		"displayName":"filter",
    		"comment":"Utilisé pour filtrer les données de la google sheet"
    	}
    }
    '
↓TestOK [core.TestCase]: 
  ↓forms_SheetID [variables.TestCaseVariable-1657276879665]: 
    description: configure=lib_GoogleSheet/DisplayObjects/mobile/configure
    value: 1bFiw2IWSWgOgxM4zUF7tcIneY_0vBjfPT4UzkjC-T98
  ↓forms_Range [variables.TestCaseVariable-1657276879667]: 
    value: A:ZZ
  ↓forms_filter [variables.TestCaseVariable-1657276879669]: 
    value: nicolas
  ↓forms_colons [variables.TestCaseVariable-1657278754549]: 
    value: A